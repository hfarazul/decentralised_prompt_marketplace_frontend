{"ast":null,"code":"var _jsxFileName = \"/Users/haquefarazul/banana_dev/prompt_marketplace/prompt-app/src/prompt.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport './prompt.css';\nimport { fileSave } from 'browser-fs-access';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Prompt = () => {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [image, setImage] = useState('');\n  const handlePromptChange = event => {\n    setPrompt(event.target.value);\n  };\n  const handleEnter = async () => {\n    // Create a JSON object from the prompt\n    const jsonObject = {\n      prompt\n    };\n\n    // Convert the JSON object to a string\n    const jsonString = JSON.stringify(jsonObject, null, 2);\n\n    // Save the JSON string to a file\n    await fileSave(new Blob([jsonString], {\n      type: 'application/json'\n    }), {\n      fileName: 'prompt.json'\n    });\n\n    // TODO: send the prompt to your server and get the base64 image data\n\n    // Let's say this is the received base64 image data\n    const receivedImageData = 'iVBORw0KG...'; // replace this with your actual data\n\n    // Set the received image data\n    setImage(receivedImageData);\n  };\n  const handleVerify = () => {\n    // Logic for verification goes here\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prompt-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Prompt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: prompt,\n      onChange: handlePromptChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleEnter,\n      children: \"Enter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Generated Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-box\",\n      children: image && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `data:image/png;base64,${image}`,\n        alt: \"Generated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: handleVerify,\n      children: \"Verify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(Prompt, \"HsoVmHOJVvkfOKHUXtYGalLsll0=\");\n_c = Prompt;\nexport default Prompt;\nvar _c;\n$RefreshReg$(_c, \"Prompt\");","map":{"version":3,"names":["React","useState","Button","fileSave","jsxDEV","_jsxDEV","Prompt","_s","prompt","setPrompt","image","setImage","handlePromptChange","event","target","value","handleEnter","jsonObject","jsonString","JSON","stringify","Blob","type","fileName","receivedImageData","handleVerify","className","children","_jsxFileName","lineNumber","columnNumber","onChange","variant","color","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/haquefarazul/banana_dev/prompt_marketplace/prompt-app/src/prompt.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport './prompt.css';\nimport { fileSave } from 'browser-fs-access';\n\nconst Prompt = () => {\n    const [prompt, setPrompt] = useState('');\n    const [image, setImage] = useState('');\n\n    const handlePromptChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n        setPrompt(event.target.value);\n    };\n\n    const handleEnter = async () => {\n        // Create a JSON object from the prompt\n        const jsonObject = { prompt };\n\n        // Convert the JSON object to a string\n        const jsonString = JSON.stringify(jsonObject, null, 2);\n\n        // Save the JSON string to a file\n        await fileSave(\n            new Blob([jsonString], { type: 'application/json' }),\n            { fileName: 'prompt.json' }\n        );\n\n        // TODO: send the prompt to your server and get the base64 image data\n\n        // Let's say this is the received base64 image data\n        const receivedImageData = 'iVBORw0KG...'; // replace this with your actual data\n\n        // Set the received image data\n        setImage(receivedImageData);\n    };\n\n    const handleVerify = () => {\n        // Logic for verification goes here\n    }\n\n    return (\n        <div className=\"prompt-container\">\n            <h2>Prompt</h2>\n            <textarea value={prompt} onChange={handlePromptChange} />\n            <Button variant=\"contained\" color=\"primary\" onClick={handleEnter}>Enter</Button>\n            <h2>Generated Image</h2>\n            <div className=\"image-box\">\n                {image && <img src={`data:image/png;base64,${image}`} alt=\"Generated\" />}\n            </div>\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleVerify}>Verify</Button>\n        </div>\n    );\n};\n\nexport default Prompt;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAO,cAAc;AACrB,SAASC,QAAQ,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMW,kBAAkB,GAAIC,KAA6C,IAAK;IAC1EJ,SAAS,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B;IACA,MAAMC,UAAU,GAAG;MAAET;IAAO,CAAC;;IAE7B;IACA,MAAMU,UAAU,GAAGC,IAAI,CAACC,SAAS,CAACH,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;;IAEtD;IACA,MAAMd,QAAQ,CACV,IAAIkB,IAAI,CAAC,CAACH,UAAU,CAAC,EAAE;MAAEI,IAAI,EAAE;IAAmB,CAAC,CAAC,EACpD;MAAEC,QAAQ,EAAE;IAAc,CAC9B,CAAC;;IAED;;IAEA;IACA,MAAMC,iBAAiB,GAAG,cAAc,CAAC,CAAC;;IAE1C;IACAb,QAAQ,CAACa,iBAAiB,CAAC;EAC/B,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvB;EAAA,CACH;EAED,oBACIpB,OAAA;IAAKqB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC7BtB,OAAA;MAAAsB,QAAA,EAAI;IAAM;MAAAJ,QAAA,EAAAK,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfzB,OAAA;MAAUU,KAAK,EAAEP,MAAO;MAACuB,QAAQ,EAAEnB;IAAmB;MAAAW,QAAA,EAAAK,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzDzB,OAAA,CAACH,MAAM;MAAC8B,OAAO,EAAC,WAAW;MAACC,KAAK,EAAC,SAAS;MAACC,OAAO,EAAElB,WAAY;MAAAW,QAAA,EAAC;IAAK;MAAAJ,QAAA,EAAAK,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChFzB,OAAA;MAAAsB,QAAA,EAAI;IAAe;MAAAJ,QAAA,EAAAK,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBzB,OAAA;MAAKqB,SAAS,EAAC,WAAW;MAAAC,QAAA,EACrBjB,KAAK,iBAAIL,OAAA;QAAK8B,GAAG,EAAG,yBAAwBzB,KAAM,EAAE;QAAC0B,GAAG,EAAC;MAAW;QAAAb,QAAA,EAAAK,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAP,QAAA,EAAAK,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE,CAAC,eACNzB,OAAA,CAACH,MAAM;MAAC8B,OAAO,EAAC,WAAW;MAACC,KAAK,EAAC,WAAW;MAACC,OAAO,EAAET,YAAa;MAAAE,QAAA,EAAC;IAAM;MAAAJ,QAAA,EAAAK,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAP,QAAA,EAAAK,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnF,CAAC;AAEd,CAAC;AAACvB,EAAA,CA9CID,MAAM;AAAA+B,EAAA,GAAN/B,MAAM;AAgDZ,eAAeA,MAAM;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}