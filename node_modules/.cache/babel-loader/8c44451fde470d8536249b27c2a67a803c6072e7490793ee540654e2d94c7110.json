{"ast":null,"code":"var _jsxFileName = \"/Users/haquefarazul/banana_dev/prompt_marketplace/prompt-app/src/prompt.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Prompt.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Prompt = () => {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [image, setImage] = useState(''); // State variable for the image data\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(prompt);\n    // TODO: Add the logic to generate the image data based on the prompt\n    // For the demonstration, let's assume the data is obtained and stored in a variable imageData\n    // setImage(imageData);\n  };\n\n  const handleVerify = () => {\n    console.log('Verification started.');\n    // TODO: Add your verification logic here\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prompt-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Prompt:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: prompt,\n          onChange: e => setPrompt(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-box\",\n      children: image && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `data:image/png;base64,${image}`,\n        alt: \"Generated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleVerify,\n      children: \"Verify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), \"  \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(Prompt, \"HsoVmHOJVvkfOKHUXtYGalLsll0=\");\n_c = Prompt;\nexport default Prompt;\nvar _c;\n$RefreshReg$(_c, \"Prompt\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Prompt","_s","prompt","setPrompt","image","setImage","handleSubmit","event","preventDefault","console","log","handleVerify","className","children","onSubmit","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","type","src","alt","onClick","_c","$RefreshReg$"],"sources":["/Users/haquefarazul/banana_dev/prompt_marketplace/prompt-app/src/prompt.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './Prompt.css';\n\nconst Prompt = () => {\n    const [prompt, setPrompt] = useState('');\n    const [image, setImage] = useState('');  // State variable for the image data\n\n    const handleSubmit = (event: React.FormEvent) => {\n        event.preventDefault();\n        console.log(prompt);\n        // TODO: Add the logic to generate the image data based on the prompt\n        // For the demonstration, let's assume the data is obtained and stored in a variable imageData\n        // setImage(imageData);\n    };\n\n    const handleVerify = () => {\n        console.log('Verification started.');\n        // TODO: Add your verification logic here\n    };\n\n    return (\n        <div className=\"prompt-container\">\n            <form onSubmit={handleSubmit}>\n                <label>\n                    Prompt:\n                    <textarea value={prompt} onChange={e => setPrompt(e.target.value)} />\n                </label>\n                <button type=\"submit\">Enter</button>\n            </form>\n            <div className=\"image-box\">\n                {image && <img src={`data:image/png;base64,${image}`} alt=\"Generated\" />}\n            </div>\n            <button onClick={handleVerify}>Verify</button>  {/* Add this button */}\n        </div>\n    );\n};\n\nexport default Prompt;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;;EAEzC,MAAMS,YAAY,GAAIC,KAAsB,IAAK;IAC7CA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBC,OAAO,CAACC,GAAG,CAACR,MAAM,CAAC;IACnB;IACA;IACA;EACJ,CAAC;;EAED,MAAMS,YAAY,GAAGA,CAAA,KAAM;IACvBF,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpC;EACJ,CAAC;;EAED,oBACIX,OAAA;IAAKa,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC7Bd,OAAA;MAAMe,QAAQ,EAAER,YAAa;MAAAO,QAAA,gBACzBd,OAAA;QAAAc,QAAA,GAAO,SAEH,eAAAd,OAAA;UAAUgB,KAAK,EAAEb,MAAO;UAACc,QAAQ,EAAEC,CAAC,IAAId,SAAS,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE,CAAC,eACRvB,OAAA;QAAQwB,IAAI,EAAC,QAAQ;QAAAV,QAAA,EAAC;MAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACPvB,OAAA;MAAKa,SAAS,EAAC,WAAW;MAAAC,QAAA,EACrBT,KAAK,iBAAIL,OAAA;QAAKyB,GAAG,EAAG,yBAAwBpB,KAAM,EAAE;QAACqB,GAAG,EAAC;MAAW;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE,CAAC,eACNvB,OAAA;MAAQ2B,OAAO,EAAEf,YAAa;MAAAE,QAAA,EAAC;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,MAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEd,CAAC;AAACrB,EAAA,CAhCID,MAAM;AAAA2B,EAAA,GAAN3B,MAAM;AAkCZ,eAAeA,MAAM;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}