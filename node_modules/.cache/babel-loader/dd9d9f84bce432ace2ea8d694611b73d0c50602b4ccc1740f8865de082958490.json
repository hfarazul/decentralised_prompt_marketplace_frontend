{"ast":null,"code":"var _jsxFileName = \"/Users/haquefarazul/banana_dev/prompt_marketplace/prompt-app/src/prompt.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport './prompt.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Prompt = () => {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [image, setImage] = useState('');\n  const handlePromptChange = event => {\n    setPrompt(event.target.value);\n  };\n  const handleEnter = async () => {\n    // Create a JSON object from the prompt\n    const jsonObject = {\n      prompt\n    };\n\n    // Send a POST request to your server\n    try {\n      const response = await fetch('http://your-server-url.com/api-endpoint', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(jsonObject)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      // Get the JSON data from the response\n      const data = await response.json();\n\n      // Let's assume the received base64 image data is in a field named 'image' in the data\n      // Set the received image data\n      setImage(data.image);\n    } catch (error) {\n      console.error('There was a problem with the fetch operation:', error);\n    }\n  };\n  const handleVerify = () => {\n    // Logic for verification goes here\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prompt-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Prompt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: prompt,\n      onChange: handlePromptChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleEnter,\n      children: \"Enter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Generated Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-box\",\n      children: image && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `data:image/png;base64,${image}`,\n        alt: \"Generated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: handleVerify,\n      children: \"Verify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(Prompt, \"HsoVmHOJVvkfOKHUXtYGalLsll0=\");\n_c = Prompt;\nexport default Prompt;\nvar _c;\n$RefreshReg$(_c, \"Prompt\");","map":{"version":3,"names":["React","useState","Button","jsxDEV","_jsxDEV","Prompt","_s","prompt","setPrompt","image","setImage","handlePromptChange","event","target","value","handleEnter","jsonObject","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","error","console","handleVerify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","variant","color","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/haquefarazul/banana_dev/prompt_marketplace/prompt-app/src/prompt.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport './prompt.css';\nimport { fileSave } from 'browser-fs-access';\n\nconst Prompt = () => {\n    const [prompt, setPrompt] = useState('');\n    const [image, setImage] = useState('');\n\n    const handlePromptChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n        setPrompt(event.target.value);\n    };\n\n    const handleEnter = async () => {\n      // Create a JSON object from the prompt\n      const jsonObject = { prompt };\n\n      // Send a POST request to your server\n      try {\n          const response = await fetch('http://your-server-url.com/api-endpoint', {\n              method: 'POST',\n              headers: {\n                  'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(jsonObject)\n          });\n\n          if (!response.ok) {\n              throw new Error(`HTTP error! status: ${response.status}`);\n          }\n\n          // Get the JSON data from the response\n          const data = await response.json();\n\n          // Let's assume the received base64 image data is in a field named 'image' in the data\n          // Set the received image data\n          setImage(data.image);\n      } catch (error) {\n          console.error('There was a problem with the fetch operation:', error);\n      }\n    };\n\n    const handleVerify = () => {\n        // Logic for verification goes here\n    }\n\n    return (\n        <div className=\"prompt-container\">\n            <h2>Prompt</h2>\n            <textarea value={prompt} onChange={handlePromptChange} />\n            <Button variant=\"contained\" color=\"primary\" onClick={handleEnter}>Enter</Button>\n            <h2>Generated Image</h2>\n            <div className=\"image-box\">\n                {image && <img src={`data:image/png;base64,${image}`} alt=\"Generated\" />}\n            </div>\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleVerify}>Verify</Button>\n        </div>\n    );\n};\n\nexport default Prompt;\n\n\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGtB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,kBAAkB,GAAIC,KAA6C,IAAK;IAC1EJ,SAAS,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B;IACA,MAAMC,UAAU,GAAG;MAAET;IAAO,CAAC;;IAE7B;IACA,IAAI;MACA,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;QACpEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,UAAU;MACnC,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAE,uBAAsBR,QAAQ,CAACS,MAAO,EAAC,CAAC;MAC7D;;MAEA;MACA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;;MAElC;MACA;MACAlB,QAAQ,CAACiB,IAAI,CAAClB,KAAK,CAAC;IACxB,CAAC,CAAC,OAAOoB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;IACzE;EACF,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACvB;EAAA,CACH;EAED,oBACI3B,OAAA;IAAK4B,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC7B7B,OAAA;MAAA6B,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfjC,OAAA;MAAUU,KAAK,EAAEP,MAAO;MAAC+B,QAAQ,EAAE3B;IAAmB;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzDjC,OAAA,CAACF,MAAM;MAACqC,OAAO,EAAC,WAAW;MAACC,KAAK,EAAC,SAAS;MAACC,OAAO,EAAE1B,WAAY;MAAAkB,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChFjC,OAAA;MAAA6B,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBjC,OAAA;MAAK4B,SAAS,EAAC,WAAW;MAAAC,QAAA,EACrBxB,KAAK,iBAAIL,OAAA;QAAKsC,GAAG,EAAG,yBAAwBjC,KAAM,EAAE;QAACkC,GAAG,EAAC;MAAW;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE,CAAC,eACNjC,OAAA,CAACF,MAAM;MAACqC,OAAO,EAAC,WAAW;MAACC,KAAK,EAAC,WAAW;MAACC,OAAO,EAAEV,YAAa;MAAAE,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnF,CAAC;AAEd,CAAC;AAAC/B,EAAA,CArDID,MAAM;AAAAuC,EAAA,GAANvC,MAAM;AAuDZ,eAAeA,MAAM;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}