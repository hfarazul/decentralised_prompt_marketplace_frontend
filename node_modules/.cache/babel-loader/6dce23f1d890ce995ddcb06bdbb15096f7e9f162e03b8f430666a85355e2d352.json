{"ast":null,"code":"var _jsxFileName = \"/Users/haquefarazul/banana_dev/prompt_marketplace/prompt-app/src/prompt.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Prompt = () => {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [image, setImage] = useState(''); // State variable for the image URL\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(prompt);\n    // TODO: Add the logic to generate the image URL based on the prompt\n    // For the demonstration, let's assume the URL is obtained and stored in a variable imageUrl\n    // setImage(imageUrl);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Prompt:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: prompt,\n          onChange: e => setPrompt(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Enter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), image && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: \"Generated\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 23\n    }, this), \"  // Display the image if the URL is not empty\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_s(Prompt, \"HsoVmHOJVvkfOKHUXtYGalLsll0=\");\n_c = Prompt;\nexport default Prompt;\nvar _c;\n$RefreshReg$(_c, \"Prompt\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Prompt","_s","prompt","setPrompt","image","setImage","handleSubmit","event","preventDefault","console","log","children","onSubmit","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["/Users/haquefarazul/banana_dev/prompt_marketplace/prompt-app/src/prompt.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Prompt = () => {\n    const [prompt, setPrompt] = useState('');\n    const [image, setImage] = useState('');  // State variable for the image URL\n\n    const handleSubmit = (event: React.FormEvent) => {\n        event.preventDefault();\n        console.log(prompt);\n        // TODO: Add the logic to generate the image URL based on the prompt\n        // For the demonstration, let's assume the URL is obtained and stored in a variable imageUrl\n        // setImage(imageUrl);\n    };\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <label>\n                    Prompt:\n                    <input type=\"text\" value={prompt} onChange={e => setPrompt(e.target.value)} />\n                </label>\n                <input type=\"submit\" value=\"Enter\" />\n            </form>\n            {image && <img src={image} alt=\"Generated\" />}  // Display the image if the URL is not empty\n        </div>\n    );\n};\n\nexport default Prompt;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;;EAEzC,MAAMS,YAAY,GAAIC,KAAsB,IAAK;IAC7CA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBC,OAAO,CAACC,GAAG,CAACR,MAAM,CAAC;IACnB;IACA;IACA;EACJ,CAAC;;EAED,oBACIH,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAMa,QAAQ,EAAEN,YAAa;MAAAK,QAAA,gBACzBZ,OAAA;QAAAY,QAAA,GAAO,SAEH,eAAAZ,OAAA;UAAOc,IAAI,EAAC,MAAM;UAACC,KAAK,EAAEZ,MAAO;UAACa,QAAQ,EAAEC,CAAC,IAAIb,SAAS,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3E,CAAC,eACRtB,OAAA;QAAOc,IAAI,EAAC,QAAQ;QAACC,KAAK,EAAC;MAAO;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,EACNjB,KAAK,iBAAIL,OAAA;MAAKuB,GAAG,EAAElB,KAAM;MAACmB,GAAG,EAAC;IAAW;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAAC,gDAClD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEd,CAAC;AAACpB,EAAA,CAxBID,MAAM;AAAAwB,EAAA,GAANxB,MAAM;AA0BZ,eAAeA,MAAM;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}